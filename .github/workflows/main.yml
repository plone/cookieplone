name: Test Codebase

on:
  push:
  workflow_dispatch:

env:
  python-version: "3.12"

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
          cache: "pip"

      - name: "Run checks"
        uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    env:
      python-version: ${{ matrix.python-version }}
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ env.python-version }}
          enable-cache: false

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}-${{ env.python-version }}

      - name: Run tests
        run: |
          make test

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ env.python-version }}
          enable-cache: false

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}-${{ env.python-version }}

      - name: Run coverage
        run: |
          make test-coverage

      - name: Report Coverage
        run: |
          echo "# Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "$(uv run coverage report --format markdown)" >> $GITHUB_STEP_SUMMARY
